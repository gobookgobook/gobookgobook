<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.bookmanageMapper">
	<insert id="bookInsert" parameterType="com.gobook.bookmanage.dto.BookDto">
		insert into book values(#{book_num},#{book_name},#{book_writer},#{book_publisher},#{book_publish_date},#{book_cost},#{book_price},#{book_quantity, jdbcType=INTEGER},#{book_index, jdbcType=VARCHAR},#{book_summary, jdbcType=VARCHAR},#{book_category},#{book_cover_file_name, jdbcType=VARCHAR},#{book_cover_file_path, jdbcType=VARCHAR},#{book_cover_file_size, jdbcType=INTEGER},#{book_preview_file_name1, jdbcType=VARCHAR},#{book_preview_file_path1, jdbcType=VARCHAR},#{book_preview_file_size1, jdbcType=INTEGER},#{book_preview_file_name2, jdbcType=VARCHAR},#{book_preview_file_path2, jdbcType=VARCHAR},#{book_preview_file_size2, jdbcType=INTEGER},#{book_preview_file_name3, jdbcType=VARCHAR},#{book_preview_file_path3, jdbcType=VARCHAR},#{book_preview_file_size3, jdbcType=INTEGER},#{book_star, jdbcType=FLOAT},#{book_reorder_count, jdbcType=INTEGER},#{book_group_purchase_count, jdbcType=INTEGER},#{book_state})
	</insert>
	
	<select id="bookStockCount" resultType="int">
		select count(*) from book where book_quantity!=0
	</select>
	
	<select id="bookStockList" parameterType="java.util.Map" resultType="com.gobook.bookmanage.dto.BookDto">
		<![CDATA[
			select * from
				(select rownum rnum, a.* from
					(select * from book where book_quantity!=0 order by book_quantity desc, book_group_purchase_count desc, book_star)a )
			where rnum>=#{startRow} and rnum<=#{endRow}
		]]>
	</select>
	
	<select id="bookInfo" parameterType="long" resultType="com.gobook.bookmanage.dto.BookDto">
		select * from book where book_num=#{book_num}
	</select>
	
	<insert id="bookReOrderInsert" parameterType="java.util.Map">
		insert into BOOKREORDER values(BOOKREORDER_REORDER_NUM_seq.nextval,#{book_num},#{reorder_quantity},#{reorder_total_price},sysdate)
	</insert>
	
	<insert id="salesMonthListInsert" parameterType="java.util.Map">
		insert into SALESMONTHLY(SALESM_NUM,BOOK_NUM,SALESMONTHLY_DATE,SALESMONTHLY_ORDER_BOOKNAME,SALESMONTHLY_ORDER_QUANTITY,SALESMONTHLY_ORDER_COST,SALESMONTHLY_ORDER_TOTALPRICE) 
		values(SALESMONTHLY_SALESM_NUM_seq.nextval,#{book_num},sysdate,#{book_name},#{reorder_quantity},#{book_cost},#{reorder_total_price})
	</insert>
	
	<update id="bookUpdate" parameterType="com.gobook.bookmanage.dto.BookDto">
		update book set book_name=#{book_name},
						book_writer=#{book_writer},
						book_publisher=#{book_publisher},
						book_publish_date=#{book_publish_date},
						book_index=#{book_index, jdbcType=VARCHAR},
						book_summary=#{book_summary, jdbcType=VARCHAR},
						book_category=#{book_category} 
		where book_num=#{book_num}
	</update>
	
	<update id="bookUpdateCoverFile" parameterType="com.gobook.bookmanage.dto.BookDto">
		update book set book_name=#{book_name},
						book_writer=#{book_writer},
						book_publisher=#{book_publisher},
						book_publish_date=#{book_publish_date},
						book_index=#{book_index, jdbcType=VARCHAR},
						book_summary=#{book_summary, jdbcType=VARCHAR},
						book_category=#{book_category},
						book_cover_file_name=#{book_cover_file_name, jdbcType=VARCHAR},
						book_cover_file_path=#{book_cover_file_path, jdbcType=VARCHAR},
						book_cover_file_size=#{book_cover_file_size, jdbcType=INTEGER} 
		where book_num=#{book_num}
	</update>
	
	<update id="bookUpdatePreviewFileOne" parameterType="com.gobook.bookmanage.dto.BookDto">
		update book set book_preview_file_name1=#{book_preview_file_name1, jdbcType=VARCHAR},
						book_preview_file_path1=#{book_preview_file_path1, jdbcType=VARCHAR},
						book_preview_file_size1=#{book_preview_file_size1, jdbcType=INTEGER}
		where book_num=#{book_num}
	</update>
	
	<update id="bookUpdatePreviewFileTwo" parameterType="com.gobook.bookmanage.dto.BookDto">
		update book set book_preview_file_name2=#{book_preview_file_name2, jdbcType=VARCHAR},
						book_preview_file_path2=#{book_preview_file_path2, jdbcType=VARCHAR},
						book_preview_file_size2=#{book_preview_file_size2, jdbcType=INTEGER}
		where book_num=#{book_num}
	</update>
	
	<update id="bookUpdatePreviewFileThree" parameterType="com.gobook.bookmanage.dto.BookDto">
		update book set book_preview_file_name3=#{book_preview_file_name3, jdbcType=VARCHAR},
						book_preview_file_path3=#{book_preview_file_path3, jdbcType=VARCHAR},
						book_preview_file_size3=#{book_preview_file_size3, jdbcType=INTEGER}
		where book_num=#{book_num}
	</update>
	
	<select id="bookReOrderListCount" resultType="int">
		select count(*) from BOOKREORDER
	</select>
	
	<select id="bookReOrderList" parameterType="java.util.Map" resultType="com.gobook.bookmanage.dto.BookReOrderDto">
		<![CDATA[
			select * from
				(select rownum rnum, a.* from
					(select bro.*, book.book_name, book.book_cost
					from bookreorder bro, book 
					where bro.book_num=book.book_num 
					order by bro.reorder_num desc)a )
			where rnum>=#{startRow} and rnum<=#{endRow}
		]]>
	</select>
	
	<select id="bookReOrderCount" resultType="int">
		select count(*) from book where BOOK_STATE=0 and BOOK_REORDER_COUNT!=0
	</select>
	
	<select id="bookReOrderCountList" parameterType="java.util.Map" resultType="com.gobook.bookmanage.dto.BookDto">
		<![CDATA[
			select * from
				(select rownum rnum, a.* from
					(select * from book where BOOK_REORDER_COUNT!=0 order by BOOK_REORDER_COUNT desc)a )
			where rnum>=#{startRow} and rnum<=#{endRow}
		]]>
	</select>
	
	<select id="bookGroupPurchaseCount" resultType="int">
		select count(*) from book where BOOK_GROUP_PURCHASE_COUNT!=0
	</select>
	
	<select id="bookGroupPurchaseCountList" parameterType="java.util.Map" resultType="com.gobook.bookmanage.dto.BookDto">
		<![CDATA[
			select * from
				(select rownum rnum, a.* from
					(select * from book where BOOK_GROUP_PURCHASE_COUNT!=0 order by BOOK_GROUP_PURCHASE_COUNT desc)a )
			where rnum>=#{startRow} and rnum<=#{endRow}
		]]>
	</select>
	
	<select id="bookSoldOutCount" resultType="int">
		select count(*) from book where book_quantity=0
	</select>
	
	<select id="bookSoldOutList" parameterType="java.util.Map" resultType="com.gobook.bookmanage.dto.BookDto">
		<![CDATA[
			select * from
				(select rownum rnum, a.* from
					(select * from book where book_quantity=0 order by BOOK_REORDER_COUNT desc, BOOK_GROUP_PURCHASE_COUNT desc)a )
			where rnum>=#{startRow} and rnum<=#{endRow}
		]]>
	</select>
	
	<update id="GroupPurchaseInit" parameterType="long">
		update book set BOOK_GROUP_PURCHASE_COUNT=0 where book_num=#{book_num}
	</update>
	
	<insert id="bookGroupPurchaseInsert" parameterType="com.gobook.bookmanage.dto.BookGroupPurchaseDto">
		insert into GROUPPURCHASE values(GROUPPURCHASE_GP_NUM_seq.nextval,#{book_num},#{group_purchase_price},#{group_purchase_min_count},#{group_purchase_max_count},0,#{group_purchase_date},1)
	</insert>
	
	<select id="gpCount" resultType="int">
		select count(*) from GROUPPURCHASE where GROUP_PURCHASE_STATE=1
	</select>
	
	<select id="gpList" resultType="com.gobook.bookmanage.dto.BookGroupPurchaseDto">
		select gp.*, book.book_name, book.book_cost, book.book_price, book.book_quantity
		from grouppurchase gp, book
		where gp.book_num=book.book_num
		and gp.group_purchase_state=1
	</select>
	
	<select id="BookGroupPurchaseDto" parameterType="long" resultType="com.gobook.bookmanage.dto.BookGroupPurchaseDto">
		select gp.*, book.book_name, book.book_cost, book.book_price, book.book_quantity
		from grouppurchase gp, book
		where gp.book_num=book.book_num
		and gp.book_num=#{book_num}
	</select>
	
	<update id="bookGroupPurchaseUpdate" parameterType="com.gobook.bookmanage.dto.BookGroupPurchaseDto">
		update GROUPPURCHASE set group_purchase_price=#{group_purchase_price},group_purchase_min_count=#{group_purchase_min_count},group_purchase_max_count=#{group_purchase_max_count},group_purchase_date=#{group_purchase_date} where gp_num=#{gp_num}
	</update>
	
	<update id="bookGroupPurchaseDelete" parameterType="int">
		update GROUPPURCHASE set GROUP_PURCHASE_STATE=3 where gp_num=#{gp_num}
	</update>
	
	<select id="bookNewPublishCount" resultType="int">
		select count(*) from book where BOOK_STATE=2 and BOOK_REORDER_COUNT!=0
	</select>
	
	<select id="bookNewPublishList" parameterType="java.util.Map" resultType="com.gobook.bookmanage.dto.BookDto">
		<![CDATA[
			select * from
				(select rownum rnum, a.* from
					(select * from book where BOOK_STATE=2 and BOOK_REORDER_COUNT!=0 order by BOOK_REORDER_COUNT desc)a )
			where rnum>=#{startRow} and rnum<=#{endRow}
		]]>
	</select>
	
	<select id="bookCount" resultType="int">
		select count(*) from book
	</select>
	
	<select id="bookList" parameterType="java.util.Map" resultType="com.gobook.bookmanage.dto.BookDto">
		<![CDATA[
			select * from
				(select rownum rnum, a.* from
					(select * from book order by book_name)a )
			where rnum>=#{startRow} and rnum<=#{endRow}
		]]>
	</select>
	
	<update id="bookStockUpdate" parameterType="com.gobook.bookmanage.dto.BookDto">
		update book set book_quantity=#{book_quantity},
						book_reorder_count=#{book_reorder_count},
						book_state=#{book_state}
		where book_num=#{book_num}
	</update>
	
	<update id="bookSpecialPriceUpdate" parameterType="com.gobook.bookmanage.dto.BookDto">
		update book set book_price=#{book_price},
						book_state=#{book_state}
		where book_num=#{book_num}
	</update>
	
	<update id="bookSpecialPriceCancle" parameterType="com.gobook.bookmanage.dto.BookDto">
		update book set book_price=#{book_price},
						book_state=#{book_state}
		where book_num=#{book_num}
	</update>
	
	<select id="bookSpecialPriceCount" resultType="int">
		select count(*) from book where book_state=5
	</select>
	
	<select id="bookSpecialPriceList" parameterType="java.util.Map" resultType="com.gobook.bookmanage.dto.BookDto">
		<![CDATA[
			select * from
				(select rownum rnum, a.* from
					(select * from book where book_state=5 order by book_price)a )
			where rnum>=#{startRow} and rnum<=#{endRow}
		]]>
	</select>
</mapper>